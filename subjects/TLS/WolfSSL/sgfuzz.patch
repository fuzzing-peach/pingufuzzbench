diff --git a/examples/server/server.c b/examples/server/server.c
index c88f375..96c8a47 100644
--- a/examples/server/server.c
+++ b/examples/server/server.c
@@ -1602,6 +1602,7 @@ THREAD_RETURN WOLFSSL_THREAD server_test(void* args)
     char* pqcAlg = NULL;
     int exitWithRet = 0;
     int loadCertKeyIntoSSLObj = 0;
+    int freeAfterErrRet = 0;
 
 #ifdef HAVE_ENCRYPT_THEN_MAC
     int disallowETM = 0;
@@ -1820,7 +1821,11 @@ THREAD_RETURN WOLFSSL_THREAD server_test(void* args)
                 break;
 
             case 'H' :
-                if (XSTRCMP(myoptarg, "defCipherList") == 0) {
+                if (XSTRCMP(myoptarg, "freeAfterErrRet") == 0) {
+                    printf("Free after error return\n");
+                    freeAfterErrRet = 1;
+                }
+                else if (XSTRCMP(myoptarg, "defCipherList") == 0) {
                     printf("Using default cipher list for testing\n");
                     useDefCipherList = 1;
                 }
@@ -3411,6 +3416,9 @@ THREAD_RETURN WOLFSSL_THREAD server_test(void* args)
                                             ERR_error_string(err, buffer));
             if (!exitWithRet) {
                 err_sys_ex(runWithErrors, "SSL_accept failed");
+                if (freeAfterErrRet) {
+                    goto conn_exit;
+                }
             } else {
                 /* cleanup */
                 SSL_free(ssl); ssl = NULL;
@@ -3711,12 +3719,16 @@ THREAD_RETURN WOLFSSL_THREAD server_test(void* args)
             if (err == WOLFSSL_ERROR_ZERO_RETURN && exitWithRet == 0)
                 err = 0;
             if (err != 0) {
-                SSL_free(ssl); ssl = NULL;
-                SSL_CTX_free(ctx); ctx = NULL;
-                CloseSocket(clientfd);
-                CloseSocket(sockfd);
-                ((func_args*)args)->return_code = err;
-                goto exit;
+                if (freeAfterErrRet) {
+                    goto conn_exit;
+                } else {
+                    SSL_free(ssl); ssl = NULL;
+                    SSL_CTX_free(ctx); ctx = NULL;
+                    CloseSocket(clientfd);
+                    CloseSocket(sockfd);
+                    ((func_args*)args)->return_code = err;
+                    goto exit;
+                }
             }
         }
 
@@ -3772,6 +3784,7 @@ THREAD_RETURN WOLFSSL_THREAD server_test(void* args)
         wolfSSL_PrintStatsConn(&ssl_stats);
 
 #endif
+conn_exit:
         SSL_free(ssl); ssl = NULL;
 
         CloseSocket(clientfd);
