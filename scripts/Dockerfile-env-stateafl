FROM ubuntu:24.04

ARG ZH_CN
ARG HTTP_PROXY
ARG HTTPS_PROXY
ARG http_proxy=${HTTP_PROXY}    
ARG https_proxy=${HTTP_PROXY}
ARG MAKE_OPT="-j4"

ENV ZH_CN=${ZH_CN}

# Change the Ubuntu package mirror
RUN apt update && apt install -y apt-transport-https ca-certificates
RUN if [ "${ZH_CN}" = "true" ]; then \
        sed -i 's@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g' /etc/apt/sources.list.d/ubuntu.sources && \
        sed -i 's/security.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list.d/ubuntu.sources && \
        apt clean; \
    fi

# LLVM-17
RUN apt update && apt install -y --no-install-recommends wget gnupg2 && rm -rf /var/lib/apt/lists
RUN echo deb http://apt.llvm.org/lunar/ llvm-toolchain-lunar-17 main >> /etc/apt/sources.list
RUN echo deb-src http://apt.llvm.org/lunar/ llvm-toolchain-lunar-17 main >> /etc/apt/sources.list
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -

# Install common dependencies
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update -y && yes | unminimize && apt upgrade -y && \
    apt install -y \
    clang-17 llvm-17 llvm-17-dev lldb-17 lld-17 \
    apt-utils git build-essential mold curl libc++-dev sudo libtool libtool-bin libz-dev libglib2.0-dev graphviz-dev bison flex automake libpixman-1-dev cgroup-tools \
    cmake bear autoconf pkg-config gdb strace \
    openssh-server openssl libssl-dev libgnutls28-dev \
    libcap-dev libpcap-dev tcpdump \
    rsync autopoint gperf texinfo gettext \
    vim nano screen htop man wget httpie bash-completion ripgrep iputils-ping iproute2 telnet net-tools ncat netcat-traditional \
    zsh autojump fzf \
    && rm -rf /var/lib/apt/lists

RUN ln -sf /usr/bin/clang-17 /usr/bin/clang && \
    ln -sf /usr/bin/clang++-17 /usr/bin/clang++ && \
    ln -sf /usr/bin/llvm-config-17 /usr/bin/llvm-config

RUN if [ "${ZH_CN}" = "true" ]; then \
        pip3 install --break-system-packages -i https://mirrors.aliyun.com/pypi/simple gcovr; \
    else \
        pip3 install --break-system-packages gcovr; \
    fi

RUN chmod 777 /tmp

RUN if [ "${HTTP_PROXY}" != "" ]; then \
        echo "Acquire::http::Proxy \"${HTTP_PROXY}\";" > /etc/apt/apt.conf.d/99proxy && \
        echo "Acquire::ftp::Proxy \"${HTTP_PROXY}\";" >> /etc/apt/apt.conf.d/99proxy && \
        echo "Acquire::https::Proxy \"${HTTP_PROXY}\";" >> /etc/apt/apt.conf.d/99proxy; \
    fi

# Users
##############
# Add a new user
ARG USER_ID=1000
ARG GROUP_ID=1000
ENV USER_ID=${USER_ID}
ENV GROUP_ID=${GROUP_ID}

RUN userdel $(getent passwd ${USER_ID} | cut -d: -f1) || true
RUN groupdel $(getent group ${GROUP_ID} | cut -d: -f1) || true
RUN groupadd -g ${GROUP_ID} user && \
    useradd -u ${USER_ID} -rm -d /home/user -s /usr/bin/zsh -g user -G sudo user -p "$(openssl passwd -1 user)" && \
    echo "user ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Use user as default username
USER user
WORKDIR /home/user
ENV HOME=/home/user

RUN if [ "${ZH_CN}" = "true" ]; then \
        git config --global url."https://gh-proxy.com/github.com/".insteadOf "https://github.com/"; \
    fi

RUN git config --global http.version HTTP/1.1 && \
    git config --global user.name Kherrisan && \
    git config --global user.email zdkscope@outlook.com
    
COPY patches /tmp/patches
COPY --chown=user:user scripts/.zshrc ${HOME}/.zshrc
COPY --chown=user:user scripts/.p10k.zsh ${HOME}/.p10k.zsh
RUN zsh -c ". ~/.zshrc"

##############
# End of user setup

# Code
##############

# Environments and fuzzer tools
##############

# AFLNet
# We need aflnet-replay to replay all the testcases
RUN git clone https://gitee.com/skyworld123/aflnet.git && \
    cd aflnet && \
    git checkout 62d63a59230bb5f5c6e54cddd381b9425dba3726 && \
    git apply /tmp/patches/aflnet.patch && \
    make clean all ${MAKE_OPT} && \
    cd llvm_mode && make ${MAKE_OPT}

# StateAFL
ENV STATEAFL_CFLAGS="-DENABLE_TRACE_GLOBAL_DATA -DBLACKLIST_ALLOC_SITES -DBLACKLIST_GLOBALS"
RUN sudo apt update && sudo DEBIAN_FRONTEND=noninteractive apt install -y tshark && sudo pip3 install --proxy=${HTTP_PROXY} --break-system-packages -i https://mirrors.aliyun.com/pypi/simple pyshark
RUN git clone https://gitee.com/zhangadiu/stateafl.git --depth=1 && \
    cd stateafl && \
    git checkout d923e22f7b2688db45b08f3fa3a29a566e7ff3a4 && \
    git submodule init && \
    git submodule update && \
    git apply /tmp/patches/stateafl.patch && \
    make ${MAKE_OPT} && \
    rm as && \
    cd llvm_mode  && \
    rm -f libmvptree.a containers.a libtlsh.a && \
    cd tlsh && \
    git apply /tmp/patches/tlsh.patch && \
    cd .. && \
    make ${MAKE_OPT}

COPY --chown=user:user . ${HOME}/profuzzbench
RUN sudo chmod +x ${HOME}/profuzzbench/scripts/*.sh 

# Build libgcov_preload.so
COPY scripts/gcov_preload.c gcov_preload.c
RUN gcc -shared -fpic gcov_preload.c -g -o libgcov_preload.so && \
    sudo touch "/etc/ld.so.conf.d/gcov.conf" && \
    echo "${HOME}" | sudo tee "/etc/ld.so.conf.d/gcov.conf" && \
    sudo ldconfig

# Build libfake_random.so
COPY scripts/fake_random.c fake_random.c
RUN gcc -shared -fpic fake_random.c -g -o libfake_random.so && \
    sudo touch "/etc/ld.so.conf.d/fake_random.conf" && \
    echo "${HOME}" | sudo tee "/etc/ld.so.conf.d/fake_random.conf" && \
    sudo ldconfig

# Disable ASLR
RUN echo "kernel.randomize_va_space = 0" | sudo tee -a /etc/sysctl.d/01-disable-aslr.conf && \
    sudo sysctl -p /etc/sysctl.d/01-disable-aslr.conf